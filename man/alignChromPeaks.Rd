% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alignChromPeaks.R
\name{mergePeaks}
\alias{mergePeaks}
\alias{makingRefFeatures}
\alias{fittingFeatures}
\alias{filteringFeatures}
\alias{getFeaturesValue}
\title{Align chromatographic peaks}
\usage{
mergePeaks(chromPeaksDT, ppm = 10, method = c("ppm", "range"))

makingRefFeatures(chromPeaksDT, reference = 1, ppm = 10, rt_diff_tol = 10)

fittingFeatures(
  chromPeaksDT,
  refFeaturesDT,
  ppm = 10,
  rt_diff_tol = 10,
  a = 0.5,
  b = 0.5
)

filteringFeatures(featuresDT, minFraction = 0.5, minPeaks = 1)

getFeaturesValue(featuresDT, chromPeaksDT, output = c("into", "intb", "maxo"))
}
\arguments{
\item{chromPeaksDT}{\code{data.table()}, with mz, mzmin, mzmax, rt, rtmin, rtmax, into, maxo, sn and sample}

\item{ppm}{\code{numeric()} defining the maximal tolerated m/z deviation between two peaks from one compound.}

\item{method}{merge methods are ppm or range}

\item{rt_diff_tol}{tolerance value for rt deviation}

\item{refFeaturesDT}{\code{data.table()}, reference features data.table}

\item{a}{\code{numeric(1)}, factor for rt score}

\item{b}{\code{numeric(1)}, factor for m/z score}

\item{minFraction}{\code{numeric(1)} defining the minimum fraction of samples in at least one sample group in which the peaks have to be present to be considered as a peak group (feature).}

\item{minPeaks}{\code{numeric(1)} with the minimum number of samples in at least one sample group in which the peaks have to be detected to be considered a peak group (feature).}

\item{output}{values output type}

\item{`integer(1)`}{idx of reference sample}
}
\description{
The algorithm of peak alignment here is based on the idea of Joint Aligner implemented in MZmine and MS-DIAL.
}
\examples{
chromPeaksDT <- readRDS(file = "./inst/demo/chromPeaksDT1.rds")
chromPeaksDT <- mergePeaks(chromPeaksDT = chromPeaksDT)
chromPeaksDT: data.table with at least cpid, mz, rt, sample
refFeaturesDT <- makingRefFeatures(chromPeaksDT)
featuresDT <- fittingFeatures(chromPeaksDT = chromPeaksDT, refFeaturesDT = refFeaturesDT, ppm = 10, rt_diff_tol = 10)
featuresDT <- filteringFeatures(featuresDT = featuresDT)
featuresValueDT <- getFeaturesValue(featuresDT = featuresDT, chromPeaksDT = chromPeaksDT)
}
