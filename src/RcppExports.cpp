// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// C_noiseEs
double C_noiseEs(Rcpp::NumericVector intensity, double mag);
RcppExport SEXP _findChromPeaks_C_noiseEs(SEXP intensitySEXP, SEXP magSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type intensity(intensitySEXP);
    Rcpp::traits::input_parameter< double >::type mag(magSEXP);
    rcpp_result_gen = Rcpp::wrap(C_noiseEs(intensity, mag));
    return rcpp_result_gen;
END_RCPP
}
// C_localMaxima
Rcpp::LogicalVector C_localMaxima(const Rcpp::NumericVector& y, int halfWindowSize);
RcppExport SEXP _findChromPeaks_C_localMaxima(SEXP ySEXP, SEXP halfWindowSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type halfWindowSize(halfWindowSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(C_localMaxima(y, halfWindowSize));
    return rcpp_result_gen;
END_RCPP
}
// C_DescendMinTol
Rcpp::IntegerVector C_DescendMinTol(Rcpp::NumericVector d, Rcpp::IntegerVector startpos, int maxDescOutlier);
RcppExport SEXP _findChromPeaks_C_DescendMinTol(SEXP dSEXP, SEXP startposSEXP, SEXP maxDescOutlierSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type startpos(startposSEXP);
    Rcpp::traits::input_parameter< int >::type maxDescOutlier(maxDescOutlierSEXP);
    rcpp_result_gen = Rcpp::wrap(C_DescendMinTol(d, startpos, maxDescOutlier));
    return rcpp_result_gen;
END_RCPP
}
// C_RectUnique
Rcpp::IntegerVector C_RectUnique(Rcpp::NumericVector m, Rcpp::IntegerVector order, int nrow, int ncol, double xdiff, double ydiff);
RcppExport SEXP _findChromPeaks_C_RectUnique(SEXP mSEXP, SEXP orderSEXP, SEXP nrowSEXP, SEXP ncolSEXP, SEXP xdiffSEXP, SEXP ydiffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type order(orderSEXP);
    Rcpp::traits::input_parameter< int >::type nrow(nrowSEXP);
    Rcpp::traits::input_parameter< int >::type ncol(ncolSEXP);
    Rcpp::traits::input_parameter< double >::type xdiff(xdiffSEXP);
    Rcpp::traits::input_parameter< double >::type ydiff(ydiffSEXP);
    rcpp_result_gen = Rcpp::wrap(C_RectUnique(m, order, nrow, ncol, xdiff, ydiff));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_findChromPeaks_C_noiseEs", (DL_FUNC) &_findChromPeaks_C_noiseEs, 2},
    {"_findChromPeaks_C_localMaxima", (DL_FUNC) &_findChromPeaks_C_localMaxima, 2},
    {"_findChromPeaks_C_DescendMinTol", (DL_FUNC) &_findChromPeaks_C_DescendMinTol, 3},
    {"_findChromPeaks_C_RectUnique", (DL_FUNC) &_findChromPeaks_C_RectUnique, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_findChromPeaks(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
